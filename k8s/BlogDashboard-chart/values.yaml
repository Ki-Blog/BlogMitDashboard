aiq-auth:
  image: docker.io/kpblm256/aiq-auth:1.1.1
  imagePullPolicy: Always
  replicas: 1
  port: 4000
  targetPort: 4000
  restartPolicy: Always
  env:
    - name: MONGO
      value: mongodb+srv://admin:XAIetDKFKKvNAxLB@dbguru.8blhy1f.mongodb.net/dbguru?retryWrites=true&w=majority&appName=dbguru
    - name: JWT_SECRET
      value: sdjfslgjd56fr7


aiq-post:
  replicas: 1
  port: 4003
  restartPolicy: Always
  image: docker.io/kpblm256/aiq-post:1.1.1
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "200m"
      memory: "256Mi"
  livenessProbe:
    initialDelaySeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
    periodSeconds: 10
  readinessProbe:
    initialDelaySeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
    periodSeconds: 10
  env:
      - name: MONGO
        value: mongodb+srv://admin:XAIetDKFKKvNAxLB@dbguru.8blhy1f.mongodb.net/dbguru?retryWrites=true&w=majority&appName=dbguru
      - name: JWT_SECRET
        value: sdjfslgjd56fr7
    
  service:
      type: ClusterIP
      port: 4003
      targetPort: 4003



aiq-user:
    replicas: 1
    port: 4001
    restartPolicy: Always
    image: kpblm256/aiq-user:1.1.1
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: "100m"
        memory: "100Mi"
      limits:
        cpu: "100m"
        memory: "100Mi"
    livenessProbe:
      initialDelaySeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 3
      periodSeconds: 10
    
    env:
      - name: MONGO
        value: mongodb+srv://admin:XAIetDKFKKvNAxLB@dbguru.8blhy1f.mongodb.net/dbguru?retryWrites=true&w=majority&appName=dbguru
      - name: JWT_SECRET
        value: sdjfslgjd56fr7

    service:
      type: ClusterIP
      port: 4001
      targetPort: 4001  
